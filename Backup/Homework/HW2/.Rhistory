}
pc.pipline(data, F, F)
pc.pipline = function(data, scale, summary)
{
pc = princomp(data, cor= scale)
a = fviz_pca_biplot(pc, geom = "point", repel = F, col.var = "#2E9FDF")
b = fviz_eig(pc)
if(summary == T)
c = summary(pc)
return(list(a, b, c))
}
pc.pipline(data, F, F)
pc.pipline = function(data, scale, summary)
{
pc = princomp(data, cor= scale)
a = fviz_pca_biplot(pc, geom = "point", repel = F, col.var = "#2E9FDF")
b = fviz_eig(pc)
if(summary == T)
c = summary(pc)
else
c = NULL
return(list(a, b, c))
}
pc.pipline(data, F, F)
pc.pipline(data, T, T)
data = as.matrix(data)
data.today = as.matrix(data[1:250,])
data.tmr = as.matrix(data[2:251,])
return = (data.tmr - data.today)/data.today
pc.pipline(return, T, F)
data = as.matrix(data)
data.today = as.matrix(data[1:250,])
data.tmr = as.matrix(data[2:251,])
return = (data.tmr - data.today)/data.today
pc.pipline(return, T, T)
remove.packages("xlsx")
library(xlsx)
install.packages("readxl")
library(readxl)
data = read_excel("./HW2(Diets).xlsx")
View(data)
anova(data)
names(data)
head(data)
library(purrr)
data = read_excel("./HW2(Diets).xlsx") %>%
anova(.$Response ~ .$Diet)
?anova
?avo
??ano
anova(data$Response ~ data$Diet)
data = read_excel("./HW2(Diets).xlsx") $>$ as.data.frame()
data = read_excel("./HW2(Diets).xlsx") %>% as.data.frame()
is.data.frame(data)
anova(data$Response ~ data$Diet)
anova(lm(Response ~ Diet, data))
Response = data$Response
Diet = data$Diet
anova(Response ~ Diet)
data = read_excel("./HW2(Diets).xlsx")
anova(lm(Response ~ Diet, data))
data = read_excel("./HW2(Diets).xlsx") %>%
anova(lm(Response ~ Diet, .))
data = read_excel("./HW2(Diets).xlsx") %>%
anova(lm(Response ~ Diet,))
data = read_excel("./HW2(Diets).xlsx")
anova(lm(Response ~ Diet, data))
anova(lm(Response ~ Diet, data))
remove(Diet)
remove(Response)
data
subset(data, select = Diet <=2)
subset(data, Diet <=2)
subset(data, select = Diet <=2)
subset(data, select = Diet <=2)[1:19]
subset(data, select = Diet <=2)[1:19,]
t.test(subset(data, Diet <=2))
subset(data, Diet == 2) - subset(data, Diet == 1) %>% t.test()
subset(data, Diet == 2) - subset(data, Diet == 1)
subset(data, Diet == 2)
subset(data, Diet == 2)[Response]
subset(data, Diet == 2)["Response"]
subset(data["Response"], Diet == 2)["Response"]
subset(data, Diet == 2)["Response"] - subset(data["Response"], Diet == 1)
subset(data, Diet == 2)["Response"] - subset(data, Diet == 1)["Response"]
subset(data, Diet == 1)["Response"]
subset(data, Diet == 2)["Response"]
pretest = c(30,28,31,26,20,30,34,15,28,20,30,29,31,29,34,20,26,25,31,29)
posttest = c(20,30,32,30,16,25,31,18,33,25,32,22,34,32,32,27,28,29,32,32)
difference = data$pretest - data$posttest
data = data.frame(subject = 1:20, pretest, posttest)
difference = data$pretest - data$posttest
a = t.test(difference)
a
pairwise.t.test(data[,2],data[,1],pool.sd=TRUE,p.adjust.method="none")
data
data = read_excel("./HW2(Diets).xlsx")
subset(data, Diet ==1)
pairwise.t.test(subset(data, Diet ==1),subset(data, Diet ==2),
pool.sd=TRUE,p.adjust.method="none")
pairwise.t.test(as.matrix(subset(data, Diet ==1)),as.matrix(subset(data, Diet ==2)),pool.sd=TRUE,p.adjust.method="none")
data
t.test(subset(data, Diet ==1), subset(data, Diet ==2), alternative = "two.sided", conf.level = 0.95)
with(data, subset(Diet == 1))
with(data, subset(data, Diet == 1))
with(data, subset(Response, Diet == 1))
with(data, subset(Diet == 1, Response))
b = with(data, subset(Response, Diet == 2))
t.test(a, b, alternative = "two.sided", conf.level = 0.95)
a
a = with(data, subset(Response, Diet == 1))
b = with(data, subset(Response, Diet == 2))
a
b
t.test(a, b, alternative = "two.sided", conf.level = 0.95)
Diet1 = with(data, subset(Response, Diet == 1))
Diet2 = with(data, subset(Response, Diet == 2))
t.test(Diet1, Diet2, alternative = "two.sided", conf.level = 0.95)
t.test(Diet1, Diet2, alternative = "two.sided", conf.level = 0.95)$conf.int
model = avo(data[,2] ~ data[,1])
?avo
??avo
model = lm(Response ~ Diet, data)
summary(model)
avo
Avo
AVO
aov
fit = aov(data[,2] ~ data[,1])
fit
data$Response
fit = aov(Response ~ Diet, data)
fit
TukeyHSD(fit)
Diet
data.Diet = factor(data$Diet)
data$Diet = factor(data$Diet)
fit = avo(Response ~ Diet, data)
fit = aov(Response ~ Diet, data)
fit
TukeyHSD(fit)
aov(Response ~ Diet, data) %>% TukeyHSD
Diet1 = with(data, subset(Response, Diet == 1))
Diet2 = with(data, subset(Response, Diet == 2))
t.test(Diet1, Diet2, alternative = "two.sided", conf.level = 0.95)$conf.int
a = aov(Response ~ Diet, data) %>% TukeyHSD
a
a$Diet
a$Diet[1,]
aov(Response ~ Diet, data) %>% TukeyHSD %>% .$Diet[1,]
aov(Response ~ Diet, data) %>% TukeyHSD %>% .$Diet
aov(Response ~ Diet, data) %>% TukeyHSD %>% .$Diet[1, ]
aov(Response ~ Diet, data) %>% TukeyHSD %>% .$Diet[1]
aov(Response ~ Diet, data) %>% TukeyHSD %>% .$Diet
aov(Response ~ Diet, data) %>% TukeyHSD %>% .$Diet %>% .[1,]
aov(Response ~ Diet, data) %>% TukeyHSD %>% .$Diet %>% [1,]
aov(Response ~ Diet, data) %>% TukeyHSD %>% .$Diet %>% .[1,]
constrasts = cbind(c(1,1,-1,-1))
constrasts(brand) = cbind(c(1,1,-1,-1))
?aov
constrasts(data$Diet) = cbind(c(1,1,-1,-1))
contrasts(data$Diet) = cbind(c(1,1,-1,-1))
contrasts(data$Diet)
fit = aov(Response ~ Diet, data, contrasts = contrasts(Diet))
contrasts(Diet) = cbind(c(1,1,-1,-1))
fit = aov(Response ~ Diet, data, contrasts = contrasts(data$Diet))
fit
data
data
data$Diet = factor(data, levels = c(0, 1))
data2 = data
data2
ifelse(data$Diet <= 2, 0, 1)
data2$level = ifelse(vector(data2$Diet) <= 2, 0, 1)
data2$level = ifelse(as.vector(data2$Diet) <= 2, 0, 1)
data2
tail(data2)
data2$level = ifelse(as.vector(data2$Diet) <= 2, 0, 1) %>% factor()
data2
data2$level
aov(Response ~ level, data2) %>% TukeyHSD
data$Diet = factor(data$Diet)
aov(Response ~ Diet, data) %>% TukeyHSD %>% .$Diet %>% .[1,]
contrasts(data$Diet) = cbind(c(1,1,-1,-1))
fit = aov(Response ~ Diet, data, contrasts = contrasts(data$Diet))
fit
data2 = data
data2$level = ifelse(as.vector(data2$Diet) <= 2, 0, 1) %>% factor()
aov(Response ~ level, data2) %>% TukeyHSD %>% .
contrasts(data$Diet) = cbind(c(1,-1,-1,1), c(1,0,0,-1), c(0,1,-1,0))
fit = aov(Response ~ Diet, data, contrasts = contrasts(data$Diet))
fit
aov(Response ~ level, data2) %>% TukeyHSDaov(Response ~ level, data2) %>% TukeyHSD
aov(Response ~ level, data2) %>% TukeyHSD
aov(Response ~ level, data2) %>% TukeyHSD %>% .$level
contrasts(data$Diet) = cbind(c(1,0,0,-1), c(0,1,0,-1), c(0,0,1,1))
fit = aov(Response ~ Diet, data, contrasts = contrasts(data$Diet))
fit
data$Diet
summary(fit)
summary(fit)
data = read_excel("./HW2(Diets).xlsx")
anova(lm(Response ~ Diet, data))
data = read_excel("./HW2(Diets).xlsx")
data$Diet = factor(data$Diet)
anova(lm(Response ~ Diet, data))
a = anova(lm(Response ~ Diet, data))
a
a$`Pr(>F)`
a$`Pr(>F)`[1]
a$"Pr(>F)"
summary(fit)
a = summary(fit)
a$"Pr(>F)"
names(a)
names(summary(a))
library(readxl)
library(purrr)
setwd("C:/Users/jie/SkyDrive/Documents/work/ADA/HW2")
data = read_excel("./HW2(Diets).xlsx")
data$Diet = factor(data$Diet)
a = anova(lm(Response ~ Diet, data))
a
head(data)
data$Diet
data = read_excel("./HW2(Diets).xlsx") %>% as.data.frame()
data$Diet = factor(data$Diet)
a = anova(lm(Response ~ Diet, data))
model1 = lm(Response ~ Diet, data)
a = anova(model1)
a
model1
summary(model1)
confint(model1)
confint(model1)[2,]
-0.14071 - 0.10233*(-1.375)
-0.14071 - 0.10233*(1.96)
pt(0.025, 25)
pt(0.0975, 25)
pt(0.0025, 25)
-0.14071 - 0.10233*(0.5384466)
confint(model1)[2,]
confint(model1)[2,]conditionCall()
confint(model1)[2,]
summary(model1)
pnorm(0.0975)
qnorm(0.0975)
pnorm(0.00975)
qnorm(0.00975)
pnorn(1.96)
pnorm(1.96)
qnorm(0.975)
-0.14071 - qt(0.975, 25)
-0.14071 + 2.2*0.10233
qt(0.025,25)
-0.14071 + 2.059539*0.10233
qnorm(0.025)
qnorm(0.975)
qt(0.025)
qt(0.025,25)
qt(0.975,25)
aov(Response ~ Diet, data) %>% TukeyHSD %>% .$Diet %>% .[1,]
aov(Response ~ Diet, data) %>% TukeyHSD %>% .$Diet
model2 = lm(Response ~ Diet, data2)
data2 = data
data2$level = ifelse(as.vector(data2$Diet) <= 2, 0, 1) %>% factor()
model2 = lm(Response ~ Diet, data2)
summary(model2)
model2 = lm(Response ~ level, data2)
summary(model2)
confint(model2)
aov(Response ~ level, data2) %>% TukeyHSD %>% .$level
data2 = data
data2$level = ifelse(as.vector(data2$Diet) <= 2, 0, 1) %>% factor()
model2 = lm(Response ~ level, data2)
confint(model2)[2,]
aov(Response ~ level, data2) %>% TukeyHSD %>% .$level
lm(Response ~ level, data2) %>% confint()[2,]
lm(Response ~ level, data2) %>% confint(.)[2,]
lm(Response ~ level, data2) %>% confint() %>% [2,]
lm(Response ~ level, data2) %>% confint() %>% .[2,]
summary(model1)
confint(model2)[2,]
summary(model2)
names(summary(model2))
mdoel2
names(model2)
model2$contrasts
model2$effects
model2$qr
names(model2)
names(model2)
names(summarymodel2))
names(summary(model2))
summary(model2$fstatistic
f``
summary(model2)$fstatistic
data2 = data
data2$level = ifelse(as.vector(data2$Diet) <= 2, 0, 1) %>% factor()
model2 = lm(Response ~ level, data2)
confint(model2)[2,]
aov(Response ~ level, data2) %>% TukeyHSD %>% .$level
table(data2$level)
contrasts(data$Diet) = cbind(c(1,0,0,-1), c(0,1,0,-1), c(0,0,1,1))
fit = aov(Response ~ Diet, data, contrasts = contrasts(data$Diet))
fit
summary(fit)
summary.lm(fit)
summary(fit)
28.10-23.43
23.43/2
4.67/7
11.715/0.6671429
qf(17.56,2,7)
?qf
pf(17.56,2,7)
1-pf(17.56,2,7)
aov(Response ~ Diet, data) %>% TukeyHSD %>% .$Diet %>% .[1,]
summary(model1)
-0.14071 + qt(0.025, 25)*0.10233
a
data3 = with(data, subset(Diet <= 2))
data3
with(data, subset(Diet <= 2))
with(data, subset(data, Diet <= 2))
data
with(data, subset(Response, Diet <= 2))
subset(data, Diet<=2)
subset(data, Diet ==2)
with(data, subset(Diet ==2)
)
aov(Response ~ Diet, data) %>% TukeyHSD %>% .$Diet
with(data, subset(Diet ==2))
with(data, subset(data, Diet ==2))
with(data, subset(., Diet ==2))
subset(Response, Diet ==2, data)
data3 = data
data3$Diet = vector(data3$Diet)
data3$Diet = as.vector(data3$Diet)
data3 = subset(data3, Diet<=2)
data3
with(data3, t.test(subset(Response, Diet=1), subset(Response, Diet=2))
)
t.test(subset(data3$Response, data3$Diet=1), subset(data3$Response, data3$Diet=2))
t.test(subset(data3$Response, data3$Diet=1), subset(data3$Response, data3$Diet=2)
t.test(subset(data3$Response, data3$Diet==1), subset(data3$Response, data3$Diet==2))
t.test(subset(data3$Response, data3$Diet==1), subset(data3$Response, data3$Diet==2),T)
t.test(subset(data3$Response, data3$Diet==1), subset(data3$Response, data3$Diet==2),var.equal = T)
t.test(subset(data3$Response, data3$Diet==1), subset(data3$Response, data3$Diet==2),var.equal = F)
t.test(subset(data3$Response, data3$Diet==1), subset(data3$Response, data3$Diet==2),var.equal = T)
3.745714-3.605000
-0.1110575+0.3924860
-0.35147456 +0.07004599
-0.42219791+0.1407693
summary.lm(fit)
contrasts(data$Diet) = cbind(c(1,0,0,-1), c(0,1,0,-1), c(0,0,1,-1))
fit = aov(Response ~ Diet, data, contrasts = contrasts(data$Diet))
summary.lm(fit)
1-pf(89.816,2,27)
1-pf(89.816,2,27)
trt1 = subset(Response, Diet==1)
trt1 = with(data, subset(Response, Diet==1))
L = (mean(trt1) + mean(trt2))/2 - (mean(trt3) + mean(trt4))/2
trt1 = with(data, subset(Response, Diet==1))
trt2 = with(data, subset(Response, Diet==2))
trt3 = with(data, subset(Response, Diet==3))
trt4 = with(data, subset(Response, Diet==4))
L = (mean(trt1) + mean(trt2))/2 - (mean(trt3) + mean(trt4))/2
a
a$`Mean Sq`
a$`Mean Sq`[2,3]
a$`Mean Sq`
a[2,3]
MSE = a[2,3]
qt(0.975)
qt(0.975,25)
qt(0.025,25)
trt1 = with(data, subset(Response, Diet==1))
trt2 = with(data, subset(Response, Diet==2))
trt3 = with(data, subset(Response, Diet==3))
trt4 = with(data, subset(Response, Diet==4))
L = (mean(trt1) + mean(trt2))/2 - (mean(trt3) + mean(trt4))/2
MSE = a[2,3]
L.hat = sqrt(MSE * 1/4 *(1/7+1/8+1/6+1/8))
L.hat = c(-1,1) * qt(0.975, 25)
L.hat
trt1 = with(data, subset(Response, Diet==1))
trt2 = with(data, subset(Response, Diet==2))
trt3 = with(data, subset(Response, Diet==3))
trt4 = with(data, subset(Response, Diet==4))
L = (mean(trt1) + mean(trt2))/2 - (mean(trt3) + mean(trt4))/2
MSE = a[2,3]
L.hat = sqrt(MSE * 1/4 *(1/7+1/8+1/6+1/8))
L.hat = L + c(-1,1) * qt(0.975, 25)
L.hat
L
trt1 = with(data, subset(Response, Diet==1))
trt2 = with(data, subset(Response, Diet==2))
trt3 = with(data, subset(Response, Diet==3))
trt4 = with(data, subset(Response, Diet==4))
L = (mean(trt1) + mean(trt2))/2 - (mean(trt3) + mean(trt4))/2
MSE = a[2,3]
L.hat = sqrt(MSE * 1/4 *(1/7+1/8+1/6+1/8))
L + c(-1,1) * qt(0.975, 25) * L.hat
data2 = data
data2$level = ifelse(as.vector(data2$Diet) <= 2, 0, 1) %>% factor()
model2 = lm(Response ~ level, data2)
confint(model2)[2,]
aov(Response ~ level, data2) %>% TukeyHSD %>% .$level
trt1 = with(data, subset(Response, Diet==1))
trt2 = with(data, subset(Response, Diet==2))
trt3 = with(data, subset(Response, Diet==3))
trt4 = with(data, subset(Response, Diet==4))
L = (mean(trt1) + mean(trt2))/2 - (mean(trt3) + mean(trt4))/2
MSE = a[2,3]
L.hat = sqrt(MSE * 1/4 *(1/7+1/8+1/6+1/8))
L + c(-1,1) * qt(0.975, 25) * L.hat
# data2 = data
# data2$level = ifelse(as.vector(data2$Diet) <= 2, 0, 1) %>% factor()
#
# model2 = lm(Response ~ level, data2)
# confint(model2)[2,]
#
# aov(Response ~ level, data2) %>% TukeyHSD %>% .$level
trt1 = with(data, subset(Response, Diet==1))
trt2 = with(data, subset(Response, Diet==2))
trt3 = with(data, subset(Response, Diet==3))
trt4 = with(data, subset(Response, Diet==4))
L.hat = (mean(trt1) + mean(trt2))/2 - (mean(trt3) + mean(trt4))/2
MSE = a[2,3]
L.se = sqrt(MSE * 1/4 *(1/7+1/8+1/6+1/8))
L.hat + c(-1,1) * qt(0.975, 25) * L.se
# data2 = data
# data2$level = ifelse(as.vector(data2$Diet) <= 2, 0, 1) %>% factor()
#
# model2 = lm(Response ~ level, data2)
# confint(model2)[2,]
#
# aov(Response ~ level, data2) %>% TukeyHSD %>% .$level
1 - pt(L.hat / L.se)
1 - pt(L.hat / L.se, 25)
pnorm(0.025)
pnorm(0.975)
pnorm(1.96)
library(quantmod)
library(factoextra)
library(ggplot2)
company = c("MMM","AXP","AAPL","BA","CAT", "CVX", "CSCO","KO","DWDP","XOM","GS","HD","IBM","INTC","JNJ","JPM","MCD","MRK","MSFT","NKE","PFE","PG","TRV","UNH","UTX","VZ","V","WMT","WBA","DIS")
data = c()
for(i in company)
{
data = cbind(data, getSymbols(i, auto.assign = F, from = "2018-01-01", to = "2019-01-01")[,4])
}
colnames(data) = gsub(".Close", "", colnames(data))
library(quantmod)
library(factoextra)
library(ggplot2)
company = c("MMM","AXP","AAPL","BA","CAT", "CVX", "CSCO","KO","DWDP","XOM","GS","HD","IBM","INTC","JNJ","JPM","MCD","MRK","MSFT","NKE","PFE","PG","TRV","UNH","UTX","VZ","V","WMT","WBA","DIS")
data = c()
for(i in company)
{
data = cbind(data, getSymbols(i, auto.assign = F, from = "2018-01-01", to = "2019-01-01")[,4])
}
colnames(data) = gsub(".Close", "", colnames(data))
pc.pipline = function(data, scale, summary)
{
pc = princomp(data, cor= scale)
a = fviz_pca_biplot(pc, geom = "point", repel = F, col.var = "#2E9FDF")
b = fviz_eig(pc)
if(summary == T)
c = summary(pc)
else
c = NULL
return(list(a, b, c))
}
pc.pipline(data, F, F)
pc.pipline = function(data, scale, summary)
{
pc = princomp(data, cor= scale)
a = fviz_pca_biplot(pc, geom = "point", repel = F, col.var = "#2E9FDF")
b = fviz_eig(pc)
if(summary == T)
c = summary(pc)
else
c = NULL
return(list(a, b, c))
}
pc.pipline(data, F, F)
pc.pipline(data, F, T)
pc.pipline(data, T, T)
data = as.matrix(data)
data.today = as.matrix(data[1:250,])
data.tmr = as.matrix(data[2:251,])
return = (data.tmr - data.today)/data.today
pc.pipline(return, T, T)
getwd
getwd()
setwd("C:/Users/jie/SkyDrive/Documents/work/Statistical ML/HW2")
data = as.matrix(data)
data.today = as.matrix(data[1:250,])
data.tmr = as.matrix(data[2:251,])
return = (data.tmr - data.today)/data.today
pc.pipline(return, T, T)
a=pc.pipline(return, T, T)
a
pc.pipline(return, T, T)
pc.pipline(data, T, T)
data = as.matrix(data)
data.today = as.matrix(data[1:250,])
data.tmr = as.matrix(data[2:251,])
return = (data.tmr - data.today)/data.today
pc.pipline(return, T, T)
